@model DevAlternatives.Models.Customer.CustomerDetails

<style type="text/css">
    .form-group {
        text-align: center !important;
    }
</style>
@using (Html.BeginForm())
{
<div class="row" style="margin-top:100px;">
   
        @Html.AntiForgeryToken()
        <div class="col-md-6">
            <div class="panel panel-default panel-primary">
                <div class="panel-heading"> Basic Details</div>
                <div class="panel-body">
                    <div id="mainDetails">
                        <form class="form-horizontal" role="form">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CompanyID, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @*@Html.EditorFor(model => model.Companies, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.DropDownListFor(
                                m => m.CompanyID,
                                new SelectList(Model.Companies, "Id", "CompanyName"), new { @class = "form-control" }
                                )
                                    @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="panel panel-default panel-primary">
                <div class="panel-heading"> Home Address</div>
                <div class="panel-body">
                    <div id="Fisical Details">

                        <div class="form-group">
                            @Html.LabelFor(model => model.FisicalAddress1, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.FisicalAddress1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FisicalAddress1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FisicalAddress2, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.FisicalAddress2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FisicalAddress2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FisicalStateSelected, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @*@Html.EditorFor(model => model.FisicalStateSelected, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.DropDownListFor(
                                m => m.FisicalStateSelected,
                                new SelectList(Model.FisicalState, "Key", "Value"), new { @class = "form-control" }
                                )
                                @Html.ValidationMessageFor(model => model.FisicalStateSelected, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FisicalCitySelected, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @*@Html.EditorFor(model => model.FisicalCitySelected, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.DropDownListFor(
                                m => m.FisicalCitySelected,
                                new SelectList(Model.FisicalCity, "Key", "Value"), new { @class = "form-control" }
                                )
                                @Html.ValidationMessageFor(model => model.FisicalCitySelected, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FisicalZip, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.FisicalZip, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FisicalZip, "", new { @class = "text-danger" })
                            </div>
                        </div>

                      
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="panel panel-default panel-primary">
                <div class="panel-heading"> Work Address </div>
                <div class="panel-body">
                    <div id="PostalDetails">

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostalAddress1, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.PostalAddress1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PostalAddress1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostalAddress2, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.PostalAddress2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PostalAddress2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostalStateSelected, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @*@Html.EditorFor(model => model.PostalStateSelected, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.DropDownListFor(
                                m => m.PostalStateSelected,
                                new SelectList(Model.PostalState, "Key", "Value"), new { @class = "form-control" }
                                )
                                @Html.ValidationMessageFor(model => model.PostalStateSelected, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostalCitySelected, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @*@Html.EditorFor(model => model.PostalCitySelected, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.DropDownListFor(
                                m => m.PostalCitySelected,
                                new SelectList(Model.PostalCity, "Key", "Value"), new { @class = "form-control" }
                                )
                                @Html.ValidationMessageFor(model => model.PostalCitySelected, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostalZip, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.PostalZip, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PostalZip, "", new { @class = "text-danger" })
                            </div>
                        </div>

                      
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="panel panel-default panel-primary">
                <div class="panel-heading">Contact Details</div>
                <div class="panel-body">
                    <div id="contactDetails">

                        <div class="form-group">
                            @Html.LabelFor(model => model.HomePhone, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MobilePhone, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.MobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.WorkPhone, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.WorkPhone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WorkPhone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="col-md-11">
            <div class="panel panel-default panel-primary">
                <div class="panel-heading"> Login Details </div>
                <div class="panel-body">
                    <div id="Login Details">

                        <div class="form-group">
                            @Html.LabelFor(model => model.loginDetails.EmailOrPhone, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.loginDetails.EmailOrPhone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.loginDetails.EmailOrPhone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.loginDetails.Password, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.PasswordFor(model => model.loginDetails.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.loginDetails.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.loginDetails.ComfirmPassword, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.PasswordFor(model => model.loginDetails.ComfirmPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.loginDetails.ComfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="col-md-12">
            <div class="form-group">
                <div class="col-md-11">
                    <input type="submit" value="Create" class="btn btn-default btn-primary" />
                </div>
            </div>
        </div>
  
</div>
}

<div>
    @Html.ActionLink("Back to Login", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $.validator.setDefaults({ onkeyup: false });
    </script>

<script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#FisicalStateSelected").change(function () {
            $("#FisicalCitySelected").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCities")', // we are calling json method

                dataType: 'json',

                data: { id: $("#FisicalStateSelected").val() },
               // here we are get value of selected country and passing same value                  as inputto json method GetStates.

                success: function (cities) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                  //  cities = JSON.parse(cities);
                    $.each(cities, function (i, city) {
                        $("#FisicalCitySelected").append('<option value="' + city.Value + '">' +
                         city.Text + '</option>');
                    // here we are adding option for States

                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
</script>


<script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#PostalStateSelected").change(function () {
            $("#PostalCitySelected").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCities")', // we are calling json method

                dataType: 'json',

                data: { id: $("#PostalStateSelected").val() },
               // here we are get value of selected country and passing same value                  as inputto json method GetStates.

                success: function (cities) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                  //  cities = JSON.parse(cities);
                    $.each(cities, function (i, city) {
                        $("#PostalCitySelected").append('<option value="' + city.Value + '">' +
                         city.Text + '</option>');
                    // here we are adding option for States

                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
</script>

}
